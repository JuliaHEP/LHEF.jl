using LHEF
using Test

const SAMPLES_DIR = joinpath(@__DIR__, "")

@testset "laziness" begin
    lazyevents = parse_lhe(joinpath(SAMPLES_DIR, "ft.lhe"))
    events = collect(lazyevents)
    @test events isa Vector
    @test length(events) == 45
end

@testset "parsing" begin
    events = parse_lhe(joinpath(SAMPLES_DIR, "ft.lhe")) |> collect
    event = events[1]
    particles = event.particles
    header = event.header
    @test values(header) == (6, 0, 0.1182900E-04, 0.2556536E+03, 0.7546771E-02, 0.1112889E+00)
    @test length(particles) == 6
    @test values(particles[1]) == (1, 21, -1, 0, 0, 502, 503, 0.00000000000E+00 , 0.00000000000E+00 , 0.10709531583E+04 , 0.10709531583E+04, 0.00000000000E+00, 0., -1.)
    @test values(particles[2]) == (2, 21, -1, 0, 0, 501, 504, 0.00000000000E+00 , 0.00000000000E+00 , -0.77476002582E+03, 0.77476002582E+03, 0.00000000000E+00, 0., 1.)
    @test values(particles[3]) == (3, 6 , 1 , 1, 2, 501, 0  , 0.11337785248E+03 , 0.11416185862E+03 , -0.41887649846E+02, 0.23993966451E+03, 0.17300000000E+03, 0., 1.)
    @test values(particles[4]) == (4, 6 , 1 , 1, 2, 502, 0  , 0.34597641987E+02 , -0.27246642769E+03,-0.24576811815E+03 , 0.40714360973E+03, 0.17300000000E+03, 0., 1.)
    @test values(particles[5]) == (5, -6, 1 , 1, 2, 0  , 503, 0.15534573574E+02 , 0.18289123966E+03 , 0.82271340950E+03 , 0.86050966450E+03, 0.17300000000E+03, 0., -1.)
    @test values(particles[6]) == (6, -6, 1 , 1, 2, 0  , 504, -0.16351006804E+03,-0.24586670591E+02 ,-0.23886450899E+03 , 0.33812024543E+03, 0.17300000000E+03, 0., -1.)
end

@testset "POWHEG naive" begin
    events = parse_lhe(joinpath(SAMPLES_DIR, "POWHEG_3154.lhe"))
    @test length(events) == 2
    @test length(events[1].particles) == 5
    @test events[1].particles[1].pz ≈ 49.26306586
    @test events[1].particles[4].pz ≈ -165.4387066
    @test only(events[2].weights) ≈ 28.544548
end

@testset "POWHEG ATLAS" begin
    events = parse_lhe(joinpath(SAMPLES_DIR, "POWHEG_ATLAS.lhe"))
    @test events[2].weights ≈ 
    [28.4857314, 36.8531304, 30.3681685, 25.1480266, 35.0075498, 23.3783276, 33.4843681, 26.921608, 21.9030152, 29.2239735, 31.307649, 30.7194779, 31.0757899, 30.8359515, 32.4276735, 31.9295733, 32.1157204, 32.7923789, 29.0873795, 31.1248028, 30.9933711, 30.7662972, 30.8289515, 30.2867286, 31.8923933, 31.0362653, 31.094483, 29.55809, 32.2540593, 31.2602415, 30.6621043, 30.1545456, 32.5823987, 33.1924114, 32.4715127, 30.9984242, 31.5696874, 30.4777684, 30.6107478, 30.2489736, 32.0608896, 30.9774863, 31.3473921, 29.9412565, 31.1585349, 31.8590195, 31.5476792, 30.124799, 31.5973142, 33.1753818, 30.974843, 33.0152269, 30.9846596, 30.5092971, 31.0622432, 32.6323768, 31.6927937, 30.8820074, 31.8924004, 28.9460577, 29.7991903, 31.9789328, 30.9401752, 32.1223676, 32.2244962, 32.2225928, 31.8322118, 32.270672, 30.4011026, 30.2810759, 31.367114, 32.0238737, 28.5899886, 32.7650872, 29.7712411, 33.4970011, 32.4179758, 32.0787465, 31.1045443, 32.7775484, 30.9373476, 33.3618005, 31.5975193, 32.3021339, 32.4484074, 29.8230276, 29.5357178, 31.8704584, 32.0901016, 31.3326537, 31.4337256, 31.2916985, 30.624088, 28.8852297, 33.681172, 29.8938442, 31.4618789, 31.6317907, 31.087498, 30.1708603, 30.5348474, 30.3656473, 32.0020271, 31.3831116, 32.3882504, 28.2311243, 32.1612453, 33.4933947, 32.5451363, 30.63254, 29.3737319, 31.9052797, 32.0124041, 31.9105778, 32.0383824, 32.238747, 32.141114, 32.1409111, 31.8700426, 31.9678687, 31.882901, 31.7582719, 31.8085759, 32.5360484, 31.8306394, 31.9543824, 31.9767074, 31.8984225, 31.8102595, 31.8048719, 31.6509134, 31.8219286, 31.9668611, 31.9681336, 31.7653385, 31.9886694, 31.8845787, 31.8912898, 31.8780765, 31.9218403, 31.8435941, 31.8560504, 31.21008, 32.5799379, 31.5071504, 32.2476873, 32.0754845, 28.4857, 47.3464888, 28.4643013, 29.20341317, 29.96050211, 48.49418101, 29.32146736, 37.16314681, 31.23136523, 26.2151044, 35.29299591, 24.2510608, 33.74937076, 27.54640619, 22.65496711, 29.37980875, 37.33184579, 31.4303711, 26.41202179, 35.45215951, 24.42127683, 33.90089237, 27.70715923, 22.80732505, 29.03796283, 37.0049155, 31.04470755, 26.0304056, 35.14370831, 24.09140658, 33.60725097, 27.39562778, 22.51206289]
end

@testset "gzip" begin
    e1 = parse_lhe(joinpath(SAMPLES_DIR, "ft.lhe")) |> collect
    e2 = parse_lhe(joinpath(SAMPLES_DIR, "ft.lhe.gz")) |> collect
    @test all([e1[i].particles == e2[i].particles for i in 1:length(e1)])
end

@testset "flattened particles" begin
    particles = flatparticles(joinpath(SAMPLES_DIR, "ft.lhe.gz"))
    @test length(particles) == 270
    @test maximum(p.eventnum for p in particles) == 45
end
